import gplay from 'google-play-scraper';
import fs from 'fs/promises';
import url from 'url';

const countries = ['us', 'fr', 'ca', 'gb', 'de', 'es', 'it', 'br', 'mx'];
const gameCategories = [
  gplay.category.GAME,
  gplay.category.GAME_ACTION,
  gplay.category.GAME_ADVENTURE,
  gplay.category.GAME_ARCADE,
  gplay.category.GAME_BOARD,
  gplay.category.GAME_CARD,
  gplay.category.GAME_CASINO,
  gplay.category.GAME_CASUAL,
  gplay.category.GAME_EDUCATIONAL,
  gplay.category.GAME_MUSIC,
  gplay.category.GAME_PUZZLE,
  gplay.category.GAME_RACING,
  gplay.category.GAME_ROLE_PLAYING,
  gplay.category.GAME_SIMULATION,
  gplay.category.GAME_SPORTS,
  gplay.category.GAME_STRATEGY,
  gplay.category.GAME_TRIVIA,
  gplay.category.GAME_WORD,
];

const numAppsToRetrieve = 200;
const outputCSVFile = 'enriched_apps.csv';
const csvHeaders = 'Country,Category,Collection,App Name,Developer,App Id,Developer Email,Developer Website,Installs\n';
const uniqueDevelopers = new Set();

(async () => {
  try {
    // Check if the file exists before appending headers
    const fileExists = await fs.access(outputCSVFile).then(() => true).catch(() => false);

    if (!fileExists) {
      await fs.appendFile(outputCSVFile, csvHeaders, 'utf-8');
    }

    for (const countryCode of countries) {
      for (const category of gameCategories) {
        try {
          const apps = await gplay.list({
            country: countryCode,
            category,
            collection: gplay.collection.TOP_FREE,
            num: numAppsToRetrieve,
            fullDetail: true,
          });

          for (const app of apps) {
            const {
              title,
              developer,
              appId,
              developerEmail,
              developerWebsite,
              installs,
            } = app;

            const installsValue = installs ? installs.replace(/\D/g, '') : '';

            if (installsValue && !uniqueDevelopers.has(developer)) {
              uniqueDevelopers.add(developer);

              // Clean up developerWebsite to get the main domain
              const parsedDeveloperWebsite = url.parse(developerWebsite);
              const mainDomain = parsedDeveloperWebsite.hostname;

              const enrichedRow = `${countryCode},${category},${gplay.collection.TOP_FREE},${title},"${developer}",${appId},${developerEmail},${mainDomain},${installsValue}`;
              await fs.appendFile(outputCSVFile, enrichedRow + '\n', 'utf-8');
            }
          }
        } catch (error) {
          console.error(`Error fetching apps for Country: ${countryCode}, Category: ${category}`, error);
        }
      }
    }

    console.log('Enrichissement termin√© !');
  } catch (error) {
    console.error('Une erreur s\'est produite :', error);
  }
})();
